name: .build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore

    # Build ControllerGenerator project and pack the generated package
    - name: Build and pack ControllerGenerator
      run: |
        dotnet build ./ControllerGenerator/ControllerGenerator.csproj --configuration Release
        dotnet pack ./ControllerGenerator/ControllerGenerator.csproj --configuration Release --output ./ControllerGenerator/bin/Release

    # Build ControllerGenerator.Abstraction project and pack the generated package
    - name: Build and pack ControllerGenerator.Abstraction
      run: |
        dotnet build ./ControllerGenerator.Abstraction/ControllerGenerator.Abstraction.csproj --configuration Release
        dotnet pack ./ControllerGenerator.Abstraction/ControllerGenerator.Abstraction.csproj --configuration Release --output ./ControllerGenerator.Abstraction/bin/Release

    # Check if the package version is greater than the latest tag or is different from the previous build's version
    - name: Check Package Version
      id: version-check
      run: |
        LATEST_TAG=$(git tag --sort=-version:refname | head -n 1)
        PACKAGE_VERSION=$(dotnet list ./ControllerGenerator/bin/Release/*.nupkg package --show-version)
        if [[ "$LATEST_TAG" != "" && "$PACKAGE_VERSION" == "$LATEST_TAG" ]]; then
          echo "Package version is the same as the latest tag. No need to publish."
          exit 0
        fi
        if [[ "$LATEST_TAG" != "" && "$PACKAGE_VERSION" < "$LATEST_TAG" ]]; then
          echo "Package version is older than the latest tag. No need to publish."
          exit 0
        fi
        echo "::set-output name=package_version::$PACKAGE_VERSION"

    # Publish NuGet packages
    - name: Publish ControllerGenerator package
      if: startsWith(github.ref, 'refs/tags/')
      env:
        NUGET_APIKEY: ${{ secrets.NUGET_APIKEY }}
      run: dotnet nuget push ./ControllerGenerator/bin/Release/*.nupkg --api-key $NUGET_APIKEY --source https://api.nuget.org/v3/index.json

    - name: Publish ControllerGenerator.Abstraction package
      if: startsWith(github.ref, 'refs/tags/')
      env:
        NUGET_APIKEY: ${{ secrets.NUGET_APIKEY }}
      run: dotnet nuget push ./ControllerGenerator.Abstraction/bin/Release/*.nupkg --api-key $NUGET_APIKEY --source https://api.nuget.org/v3/index.json
